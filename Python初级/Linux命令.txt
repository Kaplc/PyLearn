
1, 查看目录:
'''
命令:
    ls  (查看当前目录信息)
    tree    (以树状方式显示目录信息), tree 目录名 (查看指定目录)
    pwd (当前目录路径)
'''

2, 切换目录:
'''
cd 目录   (切换指定目录)
cd ~    (当前用户主目录)
cd ..   (上一级目录)
cd .    (当前目录)
cd -    (上一次目录)
'''

3, 绝对路径和相对路径
'''
绝对路径: 从根目录算
cd /根目录/

相对路径: 从当前路径
cd ..

双击tab键自动补全或者查看当前目录
'''

4, 创建,删除文件及目录
'''
命令:
    touch 文件名   (创建指定文件), touch /路径/文件名 (指定路径创建), touch 文件名 文件名 (多重创建)
    mkdir 目录名   (创建目录文件夹)
    rm 文件名或目录名  (删除指定文件或目录), rm /路径/文件名 (指定路径删除), rm -r 文件名 (非空删除)
    rmdir 目录名   (删除空目录)
示例:
    touch 1.txt -> 创建文件
    touch /bin/1.txt -> 指定路径创建
    touch 1.txt 2.txt -> 创建多个文件
    mkdir aa -> 创建aa目录
    rm aa -> 删除aa文件或目录
    rm /bin/aa -> 删除bin目录下aa文件或目录
    rmdir aa -> 删除空目录aa
'''

5, 复制,移动文件
'''
命令:
    cp /路径/文件名 /目标路径 (指定路径拷贝), cp -r (非空拷贝), cp 文件名1 文件名2 (复制并改名)
    mv /路径/文件名 /目标路径 (指定路径移动), mv 文件名1或目录1 文件名2或目录2 (文件,目录存在则移动不存在重命名)
示例:

'''

6, 命令格式
'''
command [-options] [parameter]
命令 选项 参数
多个选项可以合并 -abc
'''

7, 查看命令帮助
'''
命令:
--help
man 命令
b上一页,空格下一页
'''

8, ls命令
'''
选项: -l(以列表方式显示), -h(以k单位显示大小), -a(显示隐藏目录,文件)\
概念:
    1, d 是文件夹,- 是文件
    2, rwx 是读写执行
    3, . 和 .. 是隐藏文件和目录
    4, d/rwx/rwx/r-x 2 Python Python 4096 7月 30 2016 abc
       文件类型/当前用户权限/同组用户权限/其他用户权限 内存地址使用次数 用户名 用户组 大小 修改日期 文件名
'''

9, mkdir和rm命令选项
'''
命令:
mkdir (创建文件夹)
rm (删除)
命令选项:
mkdir: -p (创建嵌套文件夹)
rm: -i(交互提示) -r(全部删除目录及里面的文件) -f(强制删除,无提示) -d(删除空目录)
'''

10, cp和mv命令选项
'''
cp -i(交互提示) -r(拷贝全部) -v(显示拷贝后的路径)
mv -i -v(移动后的路径)
'''

11, 重定向
'''
将终端显示的结果保存到文件
> :清空重写
>> :末尾追加
ls > ../1.txt
ls >> ../2.txt
'''

12, 查看文件内容
'''
cat 文件名
查看单屏可以显示完的文件
可以同时查看多个文件内容

more 文件名
多页查看大文件

gedit 文件名
可视化可读可写

管道 |
可以临时保存终端内容不生成文件
ls /bin | more
'''

13, 链接命令
'''
ll = ls -la

软连接: 快捷方式
语法: ln -s /绝对路径/1.txt ../1-s.txt
源文件要用绝对路径

硬链接: 源文件别名
语法: ln 文件名 文件名
删除其中一个不影响另一个
'''

14, 文本搜索
'''
grep 字符串 文件名
命令选项: -i(忽略大小写), -n(显示匹配行号), -v(除此之外显示)

正则表达式: ^(指定字符串开头), $(指定字符串结尾), .(匹配收尾字符,中间字符任意)

grep ^a 1.txt -ni -> 搜索a开头的字符串
grep a$ 1.txt -ni -> 搜索a结尾的字符串
grep a.b 1.txt -ni -> 搜索a开头b结尾的所有字符串

配合管道使用:
ls /bin | grep sh

'''

15, 文件或目录搜索
'''
命令: find 路径 名字 (查找指定目录)
命令选项: -name (根据名字查找)
通配符: * (代表0个或多个字符), ? (代表任意一个字符)

示例:
find .. -name '1.txt' -> (在上级目录查找名字1.txt)
find .. -name '1*.txt' -> (在上级目录查找名字1???.txt等文件)
find .. -name '1?.txt' -> (在上级目录查找名字1?.txt等文件)

注意事项: 通配符在find里面要加引号, mv cp rm 不需要
'''

===
16, 压缩和解压缩
'''
命令: tar (解压缩.gz和.bz2)
命令选项:
-c (创建打包文件),
-v (显示包内详细信息),
-f (指定文件名字,放在所有选项后面),
-z (.gz),
-j (.bz2),
-x (解包)
-C (解压到指定目录)
示例:
tar -zcvf 123.gz *.txt -> 把当前目录的所有txt压缩到123.gz
tar -zxvf 123.gz -> 解压到当前目录
tar -zxvf 123.gz -C aa -> 解压到aa目录
tar -jcvf 123.gz *.txt -> 把当前目录的所有txt压缩到123.bz2

命令: zip(压缩.zip), unzip(解压.zip)
unzip命令选项: -d (解压到指定目录)
示例:
zip 123.zip *.txt -> 压缩打包当前目录所有txt文件到123.zip
unzip 123.zip -d aa -> 解压到aa
'''


===
17, 文件权限命令
'''
命令: chmod
角色说明: u - user文件所有者, g - group用户组, o - other其他用户, all - 所有用户
权限设置:  + 增加权限, - 撤销, = 设置
权限说明: rwx- 读、写、执行、无
示例:
chmod u+w 1.txt -> user添加w权限
chmod u=rw,g=r,o=r 1.txt -> 分别设置权限

拓展命令:
'#'作用: 1. 注释 | 2. #_*_coding:utf-8_*_ 指定文件编码格式 | 3. #!/解释器路径 表示操作系统执行该文件要用的解释器
'''

===
18, 获取管理权限命令
'''
命令: sudo -s (切换root用户,以管理员权限执行后溪命令), sudo 命令 (单次命令赋予管理员权限)
示例:
sudo touch /1.txt -> 以管理员权限在根目录创建1.txt

拓展命令:
which python3 -> 查找解释器的路径
'''
passwd -> 修改当前用户密码
who -> 查看登陆的用户

===
19, 用户相关操作
'''
命令: useradd 用户名 (添加新用户)
useradd命令选项: -m (自动创建与用户名一致的主目录), -g (指定用户组,不指定自动创建同名用户组)

示例:
useradd -m laowang -> 创建laowang用户并创建主目录
----------------------
命令: sudo passwd 用户名 (修改指定用户密码)
----------------------
命令: su - 用户名 (切换用户)
----------------------
命令: usermod (修改用户信息)
usermod命令选项: -G (设置附加组), -g (修改用户组)

示例:
sudo usermod -G sudo laowang -> 将laowang用户添加附加组sudo

提示: 只有一个主组, 用户添加对应命令的附加组才能使用
----------------------
命令: gpasswd (添加和删除附加组信息)
gpasswd命令选项: -a 用户名 (添加), -d 用户名 (删除)
示例:
sudo gpasswd -d laowang sudo
---------------------
命令: userdel (删除用户)
命令选项: -r 用户名 (删除对应主目录)
示例:
sudo userdel -r laowang

拓展命令:
id 用户名 -> 查看用户信息
'''

===
20, 用户组操作
'''
命令: groupadd (创建添加用户组)
示例: sudo groupadd test -> 创建test用户组

------
示例: sudo useradd -m -g test laowang -> 创建laowang用户指定到test用户组

-----
示例: sudo usermod -g abc laowang -> 修改至用户组abc

-----
命令: groupdel (删除用户组)
示例: sudo groupdel test -> 删除test用户组

----
提示: 先删除用户再删除用户组


=====
21, cp的-a命令选项
'''
拷贝会丢失权限,保留权限加-a
'''

====
22, 远程登录
'''
安装ssh服务端和客户端
Linux: 执行命令 sudo apt-get install openssh-server -> (服务端)
mac: 默认安装服务端
windows: 安装 OpenSSH for Windows
查看安装版本命令: ssh -V

命令: ssh 用户名@IP地址

'''

====
23, 远程拷贝
'''
命令:
scp 本地文件路径 用户名@IP地址 服务器路径,
scp 用户名@IP地址 服务器文件路径 本地路径

提示: 拷贝文件夹要加-r

多文件拷贝用FileZilla软件
'''

====
24, vim文本编辑器
'''
命令模式 ->(按i) 编辑模式 ->(Esc) 命令模式
命令模式 ->(:号) 末行模式 ->(Esc) 命令模式

使用vim命令: vim 文件名

vim末行命令:
w (保存)
wq或x (保存退出)
q! (不保存强制退出)
/内容 (搜索指定内容)
%s/替换前内容/替换后内容/g (全局替换)
开始行号,结束行号s/替换前内容/替换后内容 (局部替换)


vim编辑命令:
yy (复制光标行)
p (粘贴)
dd (剪切和删除)
V (行选中)
u (撤销)
ctrl + r (前进)
>> (右缩进)
<< (左缩进)
G (最后一行)
gg (第一行)
行号 + G (指定行)
shift + 6 (行首)
shift + 4 (行尾)
ctrl + f (下一页)
ctrl + b (上一页)
'''


====
25, 软件安装和卸载
'''

离线安装命令: dpkg -i abc.deb
deb后缀为安装包

在线安装: sudo apt-get install 安装包

更改镜像源:
1, 网站复制参数
2, 打开sources.list修改

软件卸载:
离线: sudo dpkg -r 安装包名(和安装包的名字不同)
在线: sudo apt-get remove 安装包名
'''


