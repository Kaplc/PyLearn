"""
Django settings for learnDjango project.

Generated by 'django-admin startproject' using Django 4.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project
# like this: BASE_DIR / 'subdir'.
# Path(__file__).resolve(): 获取当前文件的绝对路径
# Path(__file__).resolve().parent: 获取当前文件的绝对路径上一级(父目录)
# Path(__file__).resolve().parent.parent: 再上一级就是项目的根目录
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-rds!n()zs%@me-^7%5&zqfdv@d75(*lxv26%jkkhifck-9_8&4'

# SECURITY WARNING: don't run with debug turned on in production!

# Django调试模式
# 项目正式上线需要调成False
DEBUG = True

# 允许以哪个ip访问, 默认127.0.0.1
ALLOWED_HOSTS = ['127.0.0.1', 'pdd42.bolinkang.cn']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # 添加子应用
    'book.apps.BookConfig',
    'models_learn.apps.ModelsLearnConfig',
    'view_learn.apps.ViewLearnConfig'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # CSRF防护
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'view_learn.middleware.my_middleware'
]

# URLCONF入口: 匹配url先在setting.py找入口文件
ROOT_URLCONF = 'learnDjango.urls'

TEMPLATES = [
    {
        # 修改为jinja2模板
        'BACKEND': 'django.template.backends.jinja2.Jinja2',

        # Django默认模板引擎
        # 'BACKEND': 'django.template.backends.django.DjangoTemplates',

        # 设置模板路径, BASE_DIR是项目目录, 拼接出模板的路径
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,

        'OPTIONS': {
            # jinja2模板环境配置, 默认的
            'environment': 'jinja2_env.environment',
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
    # 报错'django.template.backends.django.DjangoTemplates' instance must be configured in TEMPLATES in order to use the admin application
    # 重新添加Django自带模板引擎
    {

        # Django默认模板引擎
        'BACKEND': 'django.template.backends.django.DjangoTemplates',

        # 设置模板路径, BASE_DIR是项目目录, 拼接出模板的路径
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,

        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'learnDjango.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

# 使用mysql修改DATABASES配置信息
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'HOST': '127.0.0.1',  # 数据库主机
#         'PORT': 3306,  # 数据库端口
#         'USER': 'root',  # 数据库用户名
#         'PASSWORD': 'mysql',  # 数据库用户密码
#         'NAME': 'book'  # 数据库名字
#     }
# }
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'HOST': '127.0.0.1',  # 数据库主机
        'PORT': 3306,  # 数据库端口
        'USER': 'root',  # 数据库用户名
        'PASSWORD': '111111',  # 数据库用户密码
        'NAME': 'book'  # 数据库名字
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

# 设置语言
LANGUAGE_CODE = 'zh-Hans'
# 设置时区
TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

# DJango通过此方式判断访问的是否是静态文件
# 路径: https://ip:port + STATIC_URL + 文件名
STATIC_URL = 'static/'

# 告知系统静态文件
STATICFILES_DIRS = [
    # 拼接static路径
    os.path.join(BASE_DIR, 'static')
]
# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
